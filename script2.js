Тестовая задача
Реализовать групповой чат в реальном времени.

Требования:

Удобный интерфейс
Авторизация пользователем
Отправка сообщений пользователем
Просмотр пользователей комнаты
Для реализации ограничиться использование библиотеки React.
Будет плюсом:

Все компоненты приложения покрыты снапшот и юнит тестами
Для реализации входящих сообщений, предоставлен модуль WebsocketMockAdapter

При создании объект начинает оповещение через функцию подписчика переданного первым аргументов в конструктов раз в n милисекунд переденными вторым аргументом (по умолчанию 1000)

const mocker = new WebsocketMockAdapter(subscriber, deelay);
// после этого начинает раз в deelay милисекунд вызывать
// subscriber c с данными о новом сообщении
Пример объекта сообщения:

{
  date: 1574901168738;
  id: "327a8179-bab9-4da7-9c61-e6925f32934c";
  text: "corrupti voluptas eius";
  user_id: "42b6cb19-32b5-4977-b3ef-7cfa1cb6f16d";
}
Так же экземпляр WebsocketMockAdapter умеет возвращать всех пользователей чата.

{
  avatar: "https://s3.amazonaws.com/uifaces/faces/twitter/sharvin/128.jpg";
  name: "Justice";
  secname: "Wiegand";
  user_id: "0e20aa95-40a8-4a17-8ce7-a7b318bb9b65";
}
Авторизация
Если пользователь не авторизован, ему показывается компонент авторизации. Форма авторизации обрабатывает ввод логина и пароля, если логит и пароль не совпадают то показывать ошибку авторизации: "Некорекные данные авторизации", если пользователь успешно авторизовался то при перезагрузке страницы ему не должна показываться форма авторизации, а он должен вместо этого увидеть страницу чата.